[{"/home/alexandre/Estagio/financeiro-simples/frontend/src/router/Router.tsx":"1","/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/ConfirmSignUp.tsx":"2","/home/alexandre/Estagio/financeiro-simples/frontend/src/contexts/AppContext.tsx":"3","/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/RecoverPassword.tsx":"4","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/Drawer.tsx":"5","/home/alexandre/Estagio/financeiro-simples/frontend/src/aws-exports.js":"6","/home/alexandre/Estagio/financeiro-simples/frontend/src/layouts/MainLayout.tsx":"7","/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Resumo.tsx":"8","/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Login.tsx":"9","/home/alexandre/Estagio/financeiro-simples/frontend/src/reportWebVitals.ts":"10","/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Lista.tsx":"11","/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/SignUp.tsx":"12","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/Data.tsx":"13","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/Header.tsx":"14","/home/alexandre/Estagio/financeiro-simples/frontend/src/layouts/AuthLayout.tsx":"15","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/Footer.tsx":"16","/home/alexandre/Estagio/financeiro-simples/frontend/src/App.tsx":"17","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/RecoverPasswordStepOne.tsx":"18","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/RecoverPasswordStepTwo.tsx":"19","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/RegistrarDialog.tsx":"20","/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Grafico.tsx":"21","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/NumberFormatCustom.tsx":"22","/home/alexandre/Estagio/financeiro-simples/frontend/src/index.tsx":"23","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/RemoveDialog.tsx":"24","/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Relatorio.tsx":"25","/home/alexandre/Estagio/financeiro-simples/frontend/src/graphql/subscriptions.ts":"26","/home/alexandre/Estagio/financeiro-simples/frontend/src/graphql/mutations.ts":"27"},{"size":2546,"mtime":1607086025285,"results":"28","hashOfConfig":"29"},{"size":3352,"mtime":1606843560890,"results":"30","hashOfConfig":"29"},{"size":4754,"mtime":1607086570035,"results":"31","hashOfConfig":"29"},{"size":4211,"mtime":1607005346370,"results":"32","hashOfConfig":"29"},{"size":2742,"mtime":1607093794075,"results":"33","hashOfConfig":"29"},{"size":692,"mtime":1607000262830,"results":"34","hashOfConfig":"29"},{"size":1369,"mtime":1607006126950,"results":"35","hashOfConfig":"29"},{"size":3114,"mtime":1607093386395,"results":"36","hashOfConfig":"29"},{"size":4500,"mtime":1607005383390,"results":"37","hashOfConfig":"29"},{"size":416,"mtime":1606922156500,"results":"38","hashOfConfig":"29"},{"size":3286,"mtime":1607103604005,"results":"39","hashOfConfig":"29"},{"size":5355,"mtime":1607005585730,"results":"40","hashOfConfig":"29"},{"size":4791,"mtime":1607093839935,"results":"41","hashOfConfig":"29"},{"size":1940,"mtime":1607093768685,"results":"42","hashOfConfig":"29"},{"size":154,"mtime":1606845204830,"results":"43","hashOfConfig":"29"},{"size":1720,"mtime":1607093010485,"results":"44","hashOfConfig":"29"},{"size":383,"mtime":1607006430450,"results":"45","hashOfConfig":"29"},{"size":2661,"mtime":1606915344040,"results":"46","hashOfConfig":"29"},{"size":3053,"mtime":1606915351250,"results":"47","hashOfConfig":"29"},{"size":3338,"mtime":1607093879685,"results":"48","hashOfConfig":"29"},{"size":4897,"mtime":1607106792775,"results":"49","hashOfConfig":"29"},{"size":732,"mtime":1606918496170,"results":"50","hashOfConfig":"29"},{"size":563,"mtime":1606920454580,"results":"51","hashOfConfig":"29"},{"size":1304,"mtime":1607085151395,"results":"52","hashOfConfig":"29"},{"size":5692,"mtime":1607090549725,"results":"53","hashOfConfig":"29"},{"size":730,"mtime":1607000259690,"results":"54","hashOfConfig":"29"},{"size":1060,"mtime":1607000259670,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wat1v3",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alexandre/Estagio/financeiro-simples/frontend/src/router/Router.tsx",["116"],"/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/ConfirmSignUp.tsx",[],[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/contexts/AppContext.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/RecoverPassword.tsx",["117","118","119","120","121","122"],"/home/alexandre/Estagio/financeiro-simples/frontend/src/components/Drawer.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/aws-exports.js",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/layouts/MainLayout.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Resumo.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Login.tsx",[],[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/reportWebVitals.ts",[],[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Lista.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/SignUp.tsx",["123","124"],"import { FC, useContext, useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport { Link, useHistory } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { Auth } from 'aws-amplify'\nimport { useForm } from 'react-hook-form'\nimport { AppContext } from '../contexts/AppContext'\nimport { colors } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\ntype FormData = {\n  telefone: string,\n  password: string,\n  firstName: string,\n  lastName: string,\n  email: string,\n  remember: boolean\n}\n\nconst SignUp: FC = () => {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const context = useContext(AppContext)\n\n  const { register, handleSubmit } = useForm<FormData>({\n    mode: 'onChange',\n    reValidateMode: 'onChange'\n  })\n\n  const history = useHistory()\n\n  const onSubmit = (data: FormData) => {\n    const { telefone, password, firstName, lastName, email } = data\n    const attributes = {\n      email: email,\n      name: firstName + ' ' + lastName,\n      phone_number: telefone\n    }\n    setLoading(true)\n\n    Auth.signUp({\n      username: telefone,\n      password,\n      attributes\n    })\n      .then(user => {\n        context?.setUser(user.user)\n\n        history.push('/confirm-signup')\n      })\n      .catch(err => {\n        setError(err.message)\n\n        console.log(err)\n\n        setLoading(false)\n      })\n  }\n  const classes = useStyles()\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <AccountCircleIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Cadastrar\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Primeiro Nome\"\n                autoFocus\n                inputRef={register({\n                  required: true\n                })}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Último Nome\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                inputRef={register({\n                  required: true\n                })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register({\n                  required: true\n                })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"telefone\"\n              label=\"Número de Telefone\"\n              name=\"telefone\"\n              inputRef={register({\n                required: true\n              })}\n            />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Senha\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={register({\n                  required: true\n                })}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Cadastrar\n          </Button>\n        </form>\n        <Grid container>\n          <Grid item container justify=\"center\">\n            <Typography\n              component={Link}\n              to=\"/login\"\n              variant=\"body2\"\n              style={{ textDecoration: 'none', color: colors.indigo[400] }}>\n              Retornar para o login\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  )\n}\n\nexport default SignUp\n","/home/alexandre/Estagio/financeiro-simples/frontend/src/components/Data.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/components/Header.tsx",[],[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/layouts/AuthLayout.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/components/Footer.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/App.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/components/RecoverPasswordStepOne.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/components/RecoverPasswordStepTwo.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/components/RegistrarDialog.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Grafico.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/components/NumberFormatCustom.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/index.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/components/RemoveDialog.tsx",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/pages/Relatorio.tsx",["125"],"import { FC, useContext, Fragment, useState } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { AppContext, Registro } from '../contexts/AppContext'\nimport {\n  Button,\n  ButtonGroup,\n  Paper,\n  colors,\n  Grid,\n  Typography,\n  Divider\n} from '@material-ui/core'\nimport RegistrarDialog from '../components/RegistrarDialog'\nimport RemoveDialog from '../components/RemoveDialog'\nimport moment from 'moment'\nimport numeral from 'numeral'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: 'inherit',\n      maxHeight: '50vh',\n      minHeight: '50vh',\n      overflowY: 'scroll',\n      overflowX: 'hidden',\n      [theme.breakpoints.up(1350)]: {\n        maxHeight: '65vh',\n        minHeight: '65vh',\n        overflowY: 'auto',\n        overflowX: 'auto'\n      }\n    },\n    inText: {\n      color: colors.green[500]\n    },\n    outText: {\n      color: colors.red.A700\n    }\n  })\n)\n\nconst Relatorio: FC = () => {\n  const [registrarDialogOpen, setRegistrarDialogOpen] = useState(false)\n  const [removeDialogOpen, setRemoveDialogOpen] = useState(false)\n  const [registroId, setRegistroId] = useState<string | undefined>('')\n  const [tipo, setTipo] = useState<'entrada' | 'saida'>('entrada')\n  const [registroSelecionado, setRegistroSelecionado] = useState<Registro>()\n\n  const context = useContext(AppContext)\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setRemoveDialogOpen(false)\n    setRegistrarDialogOpen(false)\n  }\n\n  const handleDelete = (registroId: string | undefined) => {\n    setRegistroId(registroId)\n    setRemoveDialogOpen(true)\n  }\n\n  const handleOpenRegistroDialog = () => {\n    setRegistrarDialogOpen(true)\n  }\n\n  const changeTipo = (tipo: 'entrada' | 'saida') => {\n    setTipo(tipo)\n\n    setRegistroSelecionado(undefined)\n  }\n\n  return (\n    <Fragment>\n      <Grid item container direction=\"column\">\n        <Grid item container justify=\"center\">\n          <ButtonGroup>\n            <Button\n              style={{ backgroundColor: colors.green[600], color: 'white' }}\n              onClick={() => {\n                changeTipo('entrada')\n              }}>\n              Entrada\n            </Button>\n            <Button\n              style={{ backgroundColor: colors.red.A700, color: 'white' }}\n              onClick={() => {\n                changeTipo('saida')\n              }}>\n              Saida\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <List className={classes.root}>\n          {context?.registros.map((registro) => {\n            if (\n              moment(registro.data).isSame(\n                moment(context.data),\n                context?.tipoData\n              ) &&\n              registro.tipo === tipo\n            ) {\n              return (\n                <Fragment key={registro.id}>\n                  <ListItem\n                    onClick={() => {\n                      setRegistroSelecionado(registro)\n                    }}\n                    selected={registroSelecionado?.id === registro.id}\n                    role={undefined}\n                    button>\n                    <ListItemText\n                      className={\n                        registro.tipo === 'entrada'\n                          ? classes.inText\n                          : classes.outText\n                      }\n                      id={`checkbox-list-label-${registro.id}`}>\n                      {registro.descricao}\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                      <IconButton\n                        onClick={() => {\n                          handleDelete(registro.id)\n                        }}\n                        edge=\"end\">\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                  <Divider />\n                </Fragment>\n              )\n            } else {\n              return null\n            }\n          })}\n        </List>\n\n        <Grid item container>\n          <Grid item container justify=\"center\">\n            <Typography variant=\"body1\">\n              {registroSelecionado ? (\n                <strong>\n                  R${' '}\n                  {registroSelecionado?.tipo === 'entrada'\n                    ? numeral(registroSelecionado?.valor).format('0,0.00')\n                    : -numeral(registroSelecionado?.valor).format('0,0.00')}\n                </strong>\n              ) : (\n                <>{'Selecione um registro'}</>\n              )}\n            </Typography>\n          </Grid>\n          <Grid item container justify=\"center\">\n            {tipo === 'entrada' ? (\n              <Button variant=\"contained\" onClick={handleOpenRegistroDialog}>\n                Registrar Entrada\n              </Button>\n            ) : (\n              <Button variant=\"contained\" onClick={handleOpenRegistroDialog}>\n                Registrar Saida\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n      <RemoveDialog\n        open={removeDialogOpen}\n        onClose={handleClose}\n        registroId={registroId}\n      />\n      <RegistrarDialog\n        open={registrarDialogOpen}\n        onClose={handleClose}\n        tipoRegistro={tipo}\n      />\n    </Fragment>\n  )\n}\n\nexport default Relatorio\n","/home/alexandre/Estagio/financeiro-simples/frontend/src/graphql/subscriptions.ts",[],"/home/alexandre/Estagio/financeiro-simples/frontend/src/graphql/mutations.ts",[],{"ruleId":"126","severity":1,"message":"127","line":1,"column":14,"nodeType":"128","messageId":"129","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"130","line":17,"column":10,"nodeType":"128","messageId":"129","endLine":17,"endColumn":15},{"ruleId":"126","severity":1,"message":"131","line":61,"column":10,"nodeType":"128","messageId":"129","endLine":61,"endColumn":17},{"ruleId":"126","severity":1,"message":"132","line":61,"column":19,"nodeType":"128","messageId":"129","endLine":61,"endColumn":29},{"ruleId":"126","severity":1,"message":"133","line":62,"column":10,"nodeType":"128","messageId":"129","endLine":62,"endColumn":15},{"ruleId":"126","severity":1,"message":"134","line":62,"column":17,"nodeType":"128","messageId":"129","endLine":62,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":77,"column":9,"nodeType":"128","messageId":"129","endLine":77,"endColumn":19},{"ruleId":"126","severity":1,"message":"131","line":47,"column":10,"nodeType":"128","messageId":"129","endLine":47,"endColumn":17},{"ruleId":"126","severity":1,"message":"133","line":48,"column":10,"nodeType":"128","messageId":"129","endLine":48,"endColumn":15},{"ruleId":"126","severity":1,"message":"136","line":13,"column":3,"nodeType":"128","messageId":"129","endLine":13,"endColumn":8},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'handleStep' is assigned a value but never used.","'Paper' is defined but never used."]