[{"/home/alexandre/Estagio/financeiro-app/src/index.tsx":"1","/home/alexandre/Estagio/financeiro-app/src/graphql/queries.ts":"2","/home/alexandre/Estagio/financeiro-app/src/pages/SignUp.tsx":"3","/home/alexandre/Estagio/financeiro-app/src/components/Data.tsx":"4","/home/alexandre/Estagio/financeiro-app/src/components/RecoverPasswordStepOne.tsx":"5","/home/alexandre/Estagio/financeiro-app/src/pages/Resumo.tsx":"6","/home/alexandre/Estagio/financeiro-app/src/pages/ConfirmSignUp.tsx":"7","/home/alexandre/Estagio/financeiro-app/src/layouts/MainLayout.tsx":"8","/home/alexandre/Estagio/financeiro-app/src/components/EditarDialog.tsx":"9","/home/alexandre/Estagio/financeiro-app/src/components/Drawer.tsx":"10","/home/alexandre/Estagio/financeiro-app/src/components/Footer.tsx":"11","/home/alexandre/Estagio/financeiro-app/src/components/RegistrarDialog.tsx":"12","/home/alexandre/Estagio/financeiro-app/src/components/RemoveDialog.tsx":"13","/home/alexandre/Estagio/financeiro-app/src/contexts/AppContext.tsx":"14","/home/alexandre/Estagio/financeiro-app/src/layouts/AuthLayout.tsx":"15","/home/alexandre/Estagio/financeiro-app/src/pages/Grafico.tsx":"16","/home/alexandre/Estagio/financeiro-app/src/pages/Login.tsx":"17","/home/alexandre/Estagio/financeiro-app/src/pages/Relatorio.tsx":"18","/home/alexandre/Estagio/financeiro-app/src/router/Router.tsx":"19","/home/alexandre/Estagio/financeiro-app/src/App.tsx":"20","/home/alexandre/Estagio/financeiro-app/src/pages/RecoverPassword.tsx":"21","/home/alexandre/Estagio/financeiro-app/src/graphql/subscriptions.ts":"22","/home/alexandre/Estagio/financeiro-app/src/graphql/mutations.ts":"23","/home/alexandre/Estagio/financeiro-app/src/components/NumberFormatCustom.tsx":"24","/home/alexandre/Estagio/financeiro-app/src/pages/Lista.tsx":"25"},{"size":557,"mtime":1607949766090,"results":"26","hashOfConfig":"27"},{"size":717,"mtime":1607642356548,"results":"28","hashOfConfig":"27"},{"size":6062,"mtime":1607956797920,"results":"29","hashOfConfig":"27"},{"size":4649,"mtime":1607949733280,"results":"30","hashOfConfig":"27"},{"size":3270,"mtime":1607956313360,"results":"31","hashOfConfig":"27"},{"size":3112,"mtime":1607949759070,"results":"32","hashOfConfig":"27"},{"size":4671,"mtime":1607956625530,"results":"33","hashOfConfig":"27"},{"size":1972,"mtime":1607959494040,"results":"34","hashOfConfig":"27"},{"size":3770,"mtime":1607956903340,"results":"35","hashOfConfig":"27"},{"size":3179,"mtime":1607949899610,"results":"36","hashOfConfig":"27"},{"size":1826,"mtime":1607949738030,"results":"37","hashOfConfig":"27"},{"size":3872,"mtime":1607957409940,"results":"38","hashOfConfig":"27"},{"size":1621,"mtime":1607955265510,"results":"39","hashOfConfig":"27"},{"size":6576,"mtime":1607955302460,"results":"40","hashOfConfig":"27"},{"size":468,"mtime":1607949747760,"results":"41","hashOfConfig":"27"},{"size":6117,"mtime":1607949753250,"results":"42","hashOfConfig":"43"},{"size":5034,"mtime":1607955962050,"results":"44","hashOfConfig":"27"},{"size":7251,"mtime":1607949756090,"results":"45","hashOfConfig":"27"},{"size":2758,"mtime":1607949762240,"results":"46","hashOfConfig":"43"},{"size":384,"mtime":1607949764140,"results":"47","hashOfConfig":"43"},{"size":3878,"mtime":1607695090086,"results":"48","hashOfConfig":"27"},{"size":862,"mtime":1607642356548,"results":"49","hashOfConfig":"27"},{"size":1096,"mtime":1607642356548,"results":"50","hashOfConfig":"27"},{"size":732,"mtime":1607694948036,"results":"51","hashOfConfig":"27"},{"size":4729,"mtime":1607957847380,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1vow3rf",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},"k7pw9l",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alexandre/Estagio/financeiro-app/src/index.tsx",[],[],"/home/alexandre/Estagio/financeiro-app/src/graphql/queries.ts",[],"/home/alexandre/Estagio/financeiro-app/src/pages/SignUp.tsx",["108"],"/home/alexandre/Estagio/financeiro-app/src/components/Data.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/components/RecoverPasswordStepOne.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/pages/Resumo.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/pages/ConfirmSignUp.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/layouts/MainLayout.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/components/EditarDialog.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/components/Drawer.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/components/Footer.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/components/RegistrarDialog.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/components/RemoveDialog.tsx",[],[],"/home/alexandre/Estagio/financeiro-app/src/contexts/AppContext.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/layouts/AuthLayout.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/pages/Grafico.tsx",["109"],"import {\n  Button,\n  ButtonGroup,\n  colors,\n  Grid,\n  ListItem,\n  List,\n  Divider,\n  Paper,\n  Typography\n} from '@material-ui/core'\nimport { FC, Fragment, useContext, useEffect, useState } from 'react'\nimport { PieChart, Pie, Cell } from 'recharts'\nimport { AppContext, Registro } from '../contexts/AppContext'\nimport numeral from 'numeral'\nimport moment from 'moment'\n\nconst Grafico: FC = () => {\n  const [tipo, setTipo] = useState<'entrada' | 'saida' | 'todos'>('todos')\n  const context = useContext(AppContext)\n  const [data, setData] = useState<\n    {\n      name: string\n      value: number\n      tipo: string\n      percent: string\n    }[]\n  >([])\n  const [registros, setRegistros] = useState<Registro[]>([])\n\n  useEffect(() => {\n    const registrosNovos = context.registros.filter((registro) =>\n      moment(registro.data).isSame(context.data, context.tipoData)\n    )\n\n    setRegistros(registrosNovos)\n  }, [context.registros, context.tipoData, context.data])\n\n  useEffect(() => {\n    const newData: {\n      name: string\n      value: number\n      tipo: string\n      percent: string\n    }[] = []\n\n    if (tipo === 'todos') {\n      const total = context.valorEntrada + context.valorSaida\n\n      if (context.valorEntrada > 0) {\n        newData.push({\n          name: 'Entrada',\n          value: context.valorEntrada,\n          tipo: 'entrada',\n          percent: numeral((context.valorEntrada / total) * 100).format('0.0')\n        })\n      }\n\n      if (context.valorSaida > 0) {\n        newData.push({\n          name: 'SaÃ­da',\n          value: context.valorSaida,\n          tipo: 'saida',\n          percent: numeral((context.valorSaida / total) * 100).format('0.0')\n        })\n      }\n      return setData(newData)\n    }\n\n    for (const registro of registros) {\n      if (registro.tipo === tipo) {\n        const dataProcurada = newData.find(\n          (e) => e.name === registro.descricao && registro.tipo === e.tipo\n        )\n        if (dataProcurada) {\n          dataProcurada.value += registro.valor\n        } else {\n          newData.push({\n            name: registro.descricao,\n            value: registro.valor,\n            tipo: registro.tipo,\n            percent: '0'\n          })\n        }\n      }\n    }\n\n    for (const dado of newData) {\n      const percent =\n        dado.tipo === 'entrada'\n          ? dado.value / context.valorEntrada\n          : dado.value / context.valorSaida\n      dado.percent = numeral(percent * 100).format('0.0')\n    }\n\n    newData.sort(\n      (a, b) => numeral(b.percent).value() - numeral(a.percent).value()\n    )\n\n    setData(newData)\n  }, [context.valorEntrada, context.valorSaida, tipo, registros])\n\n  const COLORS = [\n    colors.green[500],\n    colors.red.A700,\n    '#FFBB28',\n    '#FF8042',\n    '#8932a8',\n    '#a88e32',\n    '#328ca8',\n    colors.pink[300],\n    colors.blue[500]\n  ]\n\n  const RADIAN = Math.PI / 180\n\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  }: any) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5\n    const x = cx + radius * Math.cos(-midAngle * RADIAN)\n    const y = cy + radius * Math.sin(-midAngle * RADIAN)\n\n    return (\n      <text\n        x={x}\n        y={y}\n        fill=\"white\"\n        textAnchor={x > cx ? 'start' : 'end'}\n        dominantBaseline=\"central\">\n        {`${percent}%`}\n      </text>\n    )\n  }\n\n  const changeTipo = (tipo: 'entrada' | 'saida' | 'todos') => {\n    setTipo(tipo)\n  }\n\n  return (\n    <Grid item container direction=\"column\">\n      <Grid item container justify=\"center\">\n        <ButtonGroup>\n          <Button\n            onClick={() => {\n              changeTipo('entrada')\n            }}\n            disabled={tipo === 'entrada'}>\n            Entrada\n          </Button>\n          <Button\n            onClick={() => {\n              changeTipo('todos')\n            }}\n            disabled={tipo === 'todos'}>\n            Geral\n          </Button>\n          <Button\n            onClick={() => {\n              changeTipo('saida')\n            }}\n            disabled={tipo === 'saida'}>\n            SaÃ­da\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid container item justify=\"center\">\n        {data.length > 0 ? (\n          <Grid item container justify=\"center\">\n            <PieChart\n              width={220}\n              height={220}\n              margin={{ top: 0, left: 0, right: 0, bottom: 0 }}>\n              <Pie\n                style={{ overflow: 'visible', margin: '0' }}\n                data={data}\n                labelLine={false}\n                // label={true}\n                label={renderCustomizedLabel}\n                cursor=\"pointer\"\n                isAnimationActive={false}\n                outerRadius={100}\n                fill=\"#8884d8\"\n                dataKey=\"value\">\n                {data.map((entry: any, index: number) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />\n                ))}\n              </Pie>\n            </PieChart>\n            <Paper\n              style={{\n                width: '100%',\n                overflowY: 'scroll',\n                maxHeight: '25vh'\n              }}\n              elevation={0}>\n              <List>\n                {data.map((registro: any, index: number) => (\n                  <Fragment key={registro.name}>\n                    <ListItem\n                      button\n                      style={{ color: COLORS[index % COLORS.length] }}>\n                      R$ {numeral(registro.value).format('0,0.00')} -{' '}\n                      {registro.name} - {registro.percent}%\n                    </ListItem>\n                    {index !== data.length - 1 ? <Divider /> : null}\n                  </Fragment>\n                ))}\n              </List>\n            </Paper>\n          </Grid>\n        ) : (\n            <Typography variant=\"subtitle1\" style={{ marginTop: '10rem' }}>\n              Nenhum registro encontrado\n            </Typography>\n          )}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Grafico\n",[],"/home/alexandre/Estagio/financeiro-app/src/pages/Login.tsx",[],[],"/home/alexandre/Estagio/financeiro-app/src/pages/Relatorio.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/router/Router.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/App.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/pages/RecoverPassword.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/graphql/subscriptions.ts",[],"/home/alexandre/Estagio/financeiro-app/src/graphql/mutations.ts",[],"/home/alexandre/Estagio/financeiro-app/src/components/NumberFormatCustom.tsx",[],"/home/alexandre/Estagio/financeiro-app/src/pages/Lista.tsx",["110"],{"ruleId":"111","severity":1,"message":"112","line":50,"column":10,"nodeType":"113","messageId":"114","endLine":50,"endColumn":15},{"ruleId":"115","severity":2,"message":"116","line":225,"column":1,"nodeType":"117","messageId":"118","endLine":225,"endColumn":11,"fix":"119"},{"ruleId":"111","severity":1,"message":"120","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":18},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","indent","Expected indentation of 8 spaces but found 10.","Punctuator","wrongIndentation",{"range":"121","text":"122"},"'CreateIcon' is defined but never used.",[6046,6056],"        "]